name: 'Generate Envs'
description: 'Generate Envs from package.json'

inputs:
  app:
    required: true
    description: "App Name"
  image-prefix:
    description: "full image name, ex: [image-prefix]/[image]"
  branch-production:
    description: "Production Branch"
    default: "main"
outputs:
  app:
    description: "App Name"
    value: ${{ steps.envs.outputs.app }}
  version:
    description: "App Version"
    value: ${{ steps.envs.outputs.version }}
  packageManager:
    description: "Package Manager"
    value: ${{ steps.pkg.outputs.packageManager }}
  image:
    description: "Image Name"
    value: ${{ steps.envs.outputs.image }}
  image-fullName:
    description: "Image Full Name"
    value: ${{ steps.envs.outputs.image-fullName }}
  tag:
    description: "Image Tag"
    value: ${{ steps.envs.outputs.tag }}
  tag-hash:
    description: "Image Tag with hash"
    value: ${{ steps.envs.outputs.tag-hash }}
  tag-latest:
    description: "Image Tag with latest"
    value: ${{ steps.envs.outputs.tag-latest }}
  build-options:
    description: "Image build options"
    value: ${{ steps.envs.outputs.build-options }}
  branch:
    description: "Branch name"
    value: ${{ steps.envs.outputs.branch }}
  actor:
    description: "Actor"
    value: ${{ steps.envs.outputs.actor }}
  email:
    description: "Email"
    value: ${{ steps.envs.outputs.email }}

runs:
  using: "composite"
  steps:
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - name: Install packages
      shell: bash
      run: npm i -g semver
    - name: Get App Version
      id: pkg
      shell: bash
      run: |
        d=`jq -r '. | "VERSION=" + (.version?|tostring) + "\n" + "PACKAGE_MANAGER=" + (.packageManager?|tostring)' package.json`

        eval $d

        CORE_VERSION=`semver -c $VERSION`
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "packageManager=$PACKAGE_MANAGER" >> $GITHUB_OUTPUT
    - name: Set Environments
      id: envs
      uses: netcorext/base-info-action@dev
      with:
        app: ${{ inputs.app }}
        version: ${{ steps.pkg.outputs.version }}
        image-prefix: ${{ inputs.image-prefix }}
